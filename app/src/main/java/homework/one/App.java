/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package homework.one;

import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;

import java.util.HashMap;
import java.util.Vector;

public class App extends Application {
    Vector<Courses> courseCatalog = new Vector<>();
    int courseNumber;
    int creditNumber;

    @Override
    public void start(Stage stage) throws Exception {
        //Text Labels
        Text courseNumber = new Text();
        courseNumber.setText("Course Number: ");
        Text courseName = new Text();
        courseName.setText("Course Name: ");
        Text department = new Text();
        department.setText("Department: ");
        Text creditHours = new Text();
        creditHours.setText("Credit Hours: ");

        //Combo Box
        ComboBox<String> chooseDepartment = new ComboBox<>();
        chooseDepartment.getItems().add("Computer Science");
        chooseDepartment.getItems().add("Chemistry");
        chooseDepartment.getItems().add("Physics");
        chooseDepartment.getItems().add("Mathematics");
        chooseDepartment.getItems().add("Botany");
        chooseDepartment.getItems().add("Zoology");

        //Textfields
        TextField courseNum = new TextField();
        TextField courseNam = new TextField();
        TextField creditNum = new TextField();
        TextField deptCode = new TextField();

        //Listview
        ListView<String> catalogView = new ListView<>();

        //Buttons
        Button displayAll = new Button("display (all)");
        Button displayDept = new Button("display (dept)");
        Button enter = new Button("Enter");

        //Button Actions
        //Action for displaying all courses, and showing error if empty
        displayAll.setOnAction((new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                ObservableList<String> disp = FXCollections.observableArrayList();
                for (int i = 0; i < courseCatalog.size(); i++){
                    disp.add(courseCatalog.get(i).toString());
                }
                if (!disp.isEmpty()){
                    catalogView.setItems(disp);
                } else {
                    disp.add("Error: No Courses Found!");
                    catalogView.setItems(disp);
                }
            }
        }));

        //Action for entering course
        enter.setOnAction((new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                try{
                    courseCatalog.add(new Courses((String) chooseDepartment.getValue(), deptCode.getText(), courseNam.getText(),
                            Integer.parseInt(courseNum.getText()), Integer.parseInt((creditNum.getText()))));
                } catch (NumberFormatException ex){
                    System.err.println("Something broke");
                }
            }
        }));

        //Action for displaying all department courses
        displayDept.setOnAction((new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                ObservableList<String> allDepts = FXCollections.observableArrayList();
                for (int i = 0; i < courseCatalog.size(); i++) {
                    if (courseCatalog.get(i).getDepartment() == chooseDepartment.getValue()) {
                        allDepts.add(courseCatalog.get(i).toString());
                    }
                }
                if (!allDepts.isEmpty()){
                    catalogView.setItems(allDepts);
                } else {
                    allDepts.add("This department currently has no courses!");
                    catalogView.setItems(allDepts);
                }
            }
        }));

        //Set Stage
        VBox first = new VBox(10, department, chooseDepartment, catalogView);
        VBox second = new VBox(10, courseNumber, courseNum, deptCode, enter);
        VBox third = new VBox(10, courseName, courseNam, displayAll);
        VBox fourth = new VBox(10, creditHours, creditNum, displayDept);
        HBox fifth = new HBox(10, first, second, third, fourth);

        Scene scene = new Scene(fifth);
        stage.setScene(scene);
        stage.show();

    }

    public static void main(String[] args){
        Application.launch(args);
    }
}
